package dk.statsbiblioteket.broadcasttranscoder.processors;

import org.junit.Test;

import java.io.File;

public class SnapshotExtractorProcessorTest {

    @Test
    public void createCommandline() {
//        This is just a utility to let you see what the commandline generated by the system
//        This is nessesary, as the options are dependent on length and other properties
        SnapshotExtractorProcessor processor = new SnapshotExtractorProcessor();

        String commandLineKUANA = processor.createCommandLineKUANA(
                16,
                9,
                26,
                120,
                5,
                new File("/home/bta/streamingContent/6a844744-45ba-486d-902e-b552c0e89d4f.flv"),
                25*60,
                "/home/larm/imageDirectory/6a844744-45ba-486d-902e-b552c0e89d4f.%d.png",
                49.0/27);


        System.out.println("KUANA Commandline:\t"+commandLineKUANA);

        String commandline = processor.createCommandline(
                16,
                9,
                26,
                120,
                5,
                new File("/home/bta/streamingContent/6a844744-45ba-486d-902e-b552c0e89d4f.flv"),
                25*60,
                "/home/larm/imageDirectory/6a844744-45ba-486d-902e-b552c0e89d4f.%d.png",
                 49.0/27);
        System.out.println("Best Commandline:\t"+commandline);
    
        String commandlineOld = processor.createCommandlineOld(
                16,
                9,
                26,
                120,
                5,
                new File("/home/bta/streamingContent/6a844744-45ba-486d-902e-b552c0e89d4f.flv"),
                25*60,
                "/home/larm/imageDirectory/6a844744-45ba-486d-902e-b552c0e89d4f.%d.png",
                49.0/27);
        System.out.println("Old Commandline:\t"+commandlineOld);


//        4.0 version:          ffmpeg -i /home/bta/streamingContent/6a844744-45ba-486d-902e-b552c0e89d4f.flv -ss 120 -t 1260 -r 4/1260 -s 416x229 -vf 'pad=416:234:0:2:black'  -an -y -vframes 6 /home/larm/imageDirectory/6a844744-45ba-486d-902e-b552c0e89d4f.%d.png
//        4.1 best version:     ffmpeg -i /home/bta/streamingContent/6a844744-45ba-486d-902e-b552c0e89d4f.flv -ss 120 -t 1260 -r 4/1260 -s 416x234  -vf "scale=iw*sar:ih , pad=max(iw\,ih*(16/9)):ow/(16/9):(ow-iw)/2:(oh-ih)/2"  -aspect 16:9  -an -y -vframes 6 /home/larm/imageDirectory/6a844744-45ba-486d-902e-b552c0e89d4f.%d.png
//        4.1 KUANA version:    ffmpeg -i /home/bta/streamingContent/6a844744-45ba-486d-902e-b552c0e89d4f.flv -ss 120 -t 1500 -vf "fps=5/1500,scale=416x234,pad=416:234:0:0" -an -y -vframes 5 /home/larm/imageDirectory/6a844744-45ba-486d-902e-b552c0e89d4f.%d.png


        /*
        scale=iw*sar:ih , pad=max(iw\,ih*(16/9)):ow/(16/9):(ow-iw)/2:(oh-ih)/2
        scale = input_width*toSAR(input_height)


        pad:
            output_width = max input_width og input_height*16/9
            output_height = output_width * 9/16
            pad_width = (output_width - input_width) / 2
            pad_height = (output_height - input_height) / 2

*/
    }
}